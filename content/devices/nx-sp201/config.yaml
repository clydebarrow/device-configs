substitutions:
  # Higher value gives lower watt readout
  current_res: "0.002452"
  # Lower value gives lower voltage readout
  voltage_div: "814"
  device_name: nx-sp201
  friendly_name: Dilisens Outlet
  relay1_name: Outlet 1
  relay2_name: Outlet 2

# Basic Config
esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

# Enter you WIFI credentials
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable Logging.
logger:

# Enable Home Assistant API.
api:

# Enable over-the-air updates.
ota:

# Enable WEB server for status and updates.
web_server:
  port: 80

captive_portal:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO14
      inverted: False
    internal: false # set to true to hide from hub
    name: "${friendly_name} Button 1"
    on_press:
      - switch.toggle: relay1

  - platform: gpio
    pin:
      number: GPIO12
      inverted: False
    internal: false # set to true to hide from hub
    name: "${friendly_name} Button 2"
    on_press:
      - switch.toggle: relay2

# Status LED for blue light
# Enabling GPIO9 can brick certain versions of this plug!
#status_led:
#    pin:
#      number: GPIO09
#      inverted: true

switch:
  # Main relays
  - platform: gpio
    name: ${relay1_name}
    id: relay1
    pin: GPIO10

  - platform: gpio
    name: ${relay2_name}
    id: relay2
    pin: GPIO13

sensor:
  # Energy Monitoring
  - platform: hlw8012
    sel_pin:
      number: GPIO02
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    #current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    change_mode_every: 3
    update_interval: 3s
    current:
      name: "${device_name}_amperage"
      unit_of_measurement: A
      accuracy_decimals: 3
      filters:
        - calibrate_linear:
            - 0.000 -> 0.0
            - 5.069 -> 6.69
        # Make everything below 0.01A appear as just 0A.
        # Furthermore it corrects 0.013A for the power usage of the plug.
        - lambda: if (x < (0.01 - 0.013)) return 0; else return (x - 0.013);
    voltage:
      name: "${device_name}_voltage"
      unit_of_measurement: V
      accuracy_decimals: 1
    power:
      name: "${device_name}_wattage"
      unit_of_measurement: W
      id: "${device_name}_wattage"
      accuracy_decimals: 0

# Basic Config
esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

# Enter you WIFI credentials
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# Enable Logging.
logger:

# Enable Home Assistant API.
api:

# Enable over-the-air updates.
ota:

# Enable WEB server for status and updates.
web_server:
  port: 80

captive_portal:

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO14
      inverted: False
    internal: false # set to true to hide from hub
    name: "${friendly_name} Button 1"
    on_press:
      - switch.toggle: relay1

  - platform: gpio
    pin:
      number: GPIO12
      inverted: False
    internal: false # set to true to hide from hub
    name: "${friendly_name} Button 2"
    on_press:
      - switch.toggle: relay2

# Status LED for blue light
# Enabling GPIO9 can brick certain versions of this plug!
#status_led:
#    pin:
#      number: GPIO09
#      inverted: true

switch:
  # Main relays
  - platform: gpio
    name: ${relay1_name}
    id: relay1
    pin: GPIO10

  - platform: gpio
    name: ${relay2_name}
    id: relay2
    pin: GPIO13

sensor:
  # Energy Monitoring
  - platform: hlw8012
    sel_pin:
      number: GPIO02
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    #current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    change_mode_every: 3
    update_interval: 3s
    current:
      name: "${device_name}_amperage"
      unit_of_measurement: A
      accuracy_decimals: 3
      filters:
        - calibrate_linear:
            - 0.000 -> 0.0
            - 5.069 -> 6.69
        # Make everything below 0.01A appear as just 0A.
        # Furthermore it corrects 0.013A for the power usage of the plug.
        - lambda: if (x < (0.01 - 0.013)) return 0; else return (x - 0.013);
    voltage:
      name: "${device_name}_voltage"
      unit_of_measurement: V
      accuracy_decimals: 1
    power:
      name: "${device_name}_wattage"
      unit_of_measurement: W
      id: "${device_name}_wattage"
      accuracy_decimals: 0

substitutions:
  # Higher value gives lower watt readout
  current_res: "0.002452"
  # Lower value gives lower voltage readout
  voltage_div: "814"
  device_name: nx-sp201
  friendly_name: Dilisens Outlet
  relay1_name: Outlet 1
  relay2_name: Outlet 2

<<: !include nx-sp201-common.yaml