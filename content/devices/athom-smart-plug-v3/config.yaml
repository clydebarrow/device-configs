substitutions:
  name: "athom-relay"
  friendly_name: "Athom Relay"
  switch_restore_mode: RESTORE_DEFAULT_OFF
  sensor_update_interval: 10s
  current_limit : "10"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"

esp32:
  board: esp32-c3-devkitm-1
  flash_size: 4MB

preferences:
  flash_write_interval: 5min

api:

ota:
  - platform: esphome

logger:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

uart:
  rx_pin: GPIO20
  baud_rate: 4800
  data_bits: 8
  stop_bits: 1
  parity: EVEN

globals:
  - id: total_energy
    type: float
    restore_value: yes
    initial_value: '0.0'

binary_sensor:
  - platform: status
    name: "Status"
    entity_category: diagnostic    

  - platform: gpio
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: true
    name: "Power Button"
    disabled_by_default: true
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - switch.toggle: mini_relay

  - platform: gpio
    id: the_switch
    name: "Power Switch"
    disabled_by_default: true
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
    on_press:
      - switch.turn_on: mini_relay
    on_release:
      - switch.turn_off: mini_relay

time:
  - platform: homeassistant

sensor:
  - platform: cse7766
    id: athom_cse7766
    current:
      name: "Current"
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 0.060) return 0.0; else return x;   #For the chip will report less than 3w power when no load is connected
      on_value_range:
        - above: ${current_limit}
          then:
            - switch.turn_off: mini_relay

    voltage:
      name: "Voltage"
      filters:
        - throttle_average: ${sensor_update_interval}

    power:
      name: "Power"
      id: power_sensor
      filters:
        - throttle_average: ${sensor_update_interval}
        - lambda: if (x < 3.0) return 0.0; else return x;    #For the chip will report less than 3w power when no load is connected

    energy:
      name: "Energy"
      id: energy
      unit_of_measurement: kWh
      filters:
        - throttle: ${sensor_update_interval}
        # Multiplication factor from W to kW is 0.001
        - multiply: 0.001
      on_value:
        then:
          - lambda: |-
              static float previous_energy_value = 0.0;
              float current_energy_value = id(energy).state;
              id(total_energy) += current_energy_value - previous_energy_value;
              previous_energy_value = current_energy_value;
              id(total_energy_sensor).update();

    apparent_power:
      name: "Apparent Power"
      filters:
        - throttle_average: ${sensor_update_interval}
    reactive_power:
      name: "Reactive Power"
      filters:
        - throttle_average: ${sensor_update_interval}
    power_factor:
      name: "Power Factor"
      filters:
        - throttle_average: ${sensor_update_interval}

  - platform: template
    name: "Total Energy"
    id: total_energy_sensor
    unit_of_measurement: kWh
    device_class: "energy"
    state_class: "total_increasing"
    icon: "mdi:lightning-bolt"
    accuracy_decimals: 3
    lambda: |-
      return id(total_energy);
    update_interval: ${sensor_update_interval}

  - platform: total_daily_energy
    name: "Total Energy Today"
    restore: true
    power_id: power_sensor
    unit_of_measurement: kWh
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

light:
  - platform: status_led
    id: led
    name: "Blue LED"
    disabled_by_default: true
    pin:
      number: GPIO7
      inverted: true

switch:
  - platform: gpio
    pin: GPIO6
    id: mini_relay
    name: "Mini Switch"
    restore_mode: ${switch_restore_mode}
    on_turn_on:
      - light.turn_on: led
    on_turn_off:
      - light.turn_off: led

