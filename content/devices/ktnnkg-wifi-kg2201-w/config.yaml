substitutions:
  device_name: ktnnkg
  friendly_name: KTNNKG

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: on #we only have one WiFi AP so just use the first one that matches
  ap: #since we listed an SSID above, this AP mode will only enable if no WiFi connection could be made
    ssid: ${friendly_name}_AP
    password: !secret wifi_password

logger:
  baud_rate: 0 #disable UART logging since we aren't connected to GPIO1
  level: DEBUG # esphome default is debug, but this must be at at least DEBUG for RC codes to be dumped to the log

# Enable Home Assistant API
api:

# Enable OTA updates
ota:
  safe_mode: True

# Enable web server
web_server:
  port: 80

switch:
  - platform: gpio
    name: "${friendly_name}"
    id: "relay"
    pin: GPIO04
  - platform: gpio
    name: "redLED"
    id: "redLED"
    internal: true
    pin: GPIO13
    inverted: true

status_led:
  pin:
    number: GPIO15
    inverted: true

remote_receiver:
  pin:
    number: GPIO05
    inverted: false
  dump:
    - rc_switch

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO12
      inverted: True
    name: "${friendly_name} Button"
    on_press:
      - switch.toggle: "relay"
    internal: true

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO12
      inverted: True
    name: "${friendly_name} Button"
    on_press:
      - switch.toggle: "relay"
    internal: true
  - platform: remote_receiver
    internal: false
    name: "Button A1"
    rc_switch_raw:
      code: "101010101010101010101010"
    filters:
      delayed_off: 500ms
    on_press:
      then:
        - switch.turn_on: "redLED"
        - switch.toggle: "relay"
    on_release:
      then:
        - switch.turn_off: "redLED"

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO12
      inverted: True
    name: "${friendly_name} Button"
    on_press:
      - switch.toggle: "relay"
    internal: true
  - platform: remote_receiver
    internal: true
    name: "Button A1" # button A1 set for momentary
    rc_switch_raw:
      code: "101010101010101010101010"
    filters:
      delayed_off: 500ms
    on_press:
      then:
        - switch.turn_on: "redLED"
        - switch.turn_on: "relay"
    on_release:
      then:
        - switch.turn_off: "redLED"
        - switch.turn_off: "relay"
  - platform: remote_receiver
    internal: false
    name: "Button A2" # button A2 set for toggle
    rc_switch_raw:
      code: "010101010101010101010101"
    filters:
      delayed_off: 500ms
    on_press:
      then:
        - switch.turn_on: "redLED"
        - switch.toggle: "relay"
    on_release:
      then:
        - switch.turn_off: "redLED"
  - platform: remote_receiver
    internal: false
    name: "Button A3" # button A3 only forwarded to hub - no red LED either
    rc_switch_raw:
      code: "001100110011001100110011"
    filters:
      delayed_off: 500ms

esphome:
  name: ${device_name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: on #we only have one WiFi AP so just use the first one that matches
  ap: #since we listed an SSID above, this AP mode will only enable if no WiFi connection could be made
    ssid: ${friendly_name}_AP
    password: !secret wifi_password

logger:
  baud_rate: 0 #disable UART logging since we aren't connected to GPIO1
  level: DEBUG # esphome default is already DEBUG, but this must be at at least DEBUG for RC codes to be dumped to the log

# Enable Home Assistant API
api:

# Enable OTA updates
ota:
  safe_mode: True

# Enable web server
web_server:
  port: 80

switch:
  - platform: gpio
    name: "${friendly_name}"
    id: "relay"
    pin: GPIO04
  - platform: gpio
    name: "redLED"
    id: "redLED"
    internal: true
    pin:  GPIO13
    inverted: true

status_led:
    pin:
      number: GPIO15
      inverted: true

remote_receiver:
  pin:
    number: GPIO05
    inverted: false
  dump:
    - rc_switch

switch:
# Main relays
  - platform: gpio
    name: "${friendly_name}"
    id: "relay"
    pin: GPIO04
  - platform: gpio
    name: "redLED"
    id: "redLED"
    internal: true
    pin:  GPIO13
    inverted: true

status_led:
    pin:
      number: GPIO15
      inverted: true

remote_receiver:
  pin:
    number: GPIO05
    inverted: false
  dump:
    - rc_switch

substitutions:
  device_name: ktnnkg
  friendly_name: KTNNKG

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO12
      inverted: True
    name: "${friendly_name} Button"
    on_press:
      - switch.toggle: "relay"
    internal: true
  - platform: gpio
    pin:
      number: GPIO12
      inverted: True
    name: "${friendly_name} Button"
    on_press:
      - switch.toggle: "relay"
    internal: true
  - platform: remote_receiver
    internal: false
    name: "Button A1"
    rc_switch_raw:
      code: "101010101010101010101010"
    filters:
      delayed_off: 500ms
    on_press:
      then:
        - switch.turn_on: "redLED"
        - switch.toggle: "relay"
    on_release:
      then:
        - switch.turn_off: "redLED"

<<: !include ktnnkg-common.yaml