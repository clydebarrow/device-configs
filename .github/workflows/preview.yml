name: PR Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      deployments: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Check for AVIF files
        id: check-avif
        run: |
          AVIF_COUNT=$(find content -type f -name "*.avif" | wc -l)
          echo "avif_count=$AVIF_COUNT" >> $GITHUB_OUTPUT
          if [ "$AVIF_COUNT" -gt 0 ]; then
            echo "Found $AVIF_COUNT AVIF files to convert"
          fi

      - name: Install ImageMagick
        if: steps.check-avif.outputs.avif_count > 0
        run: sudo apt-get update && sudo apt-get install -y imagemagick

      - name: Convert AVIF to PNG and commit if needed
        if: steps.check-avif.outputs.avif_count > 0
        run: |
          # Configure Git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Set up token-based authentication
          git remote set-url origin https://x-access-token:${{ github.token }}@github.com/${{ github.repository }}.git

          # Find and convert AVIF files
          CONVERTED_FILES=0
          while IFS= read -r file; do
            png_file="${file%.avif}.png"
            convert "$file" "$png_file"
            rm "$file"
            git add "$png_file"
            git rm "$file"
            echo "Converted $file to $png_file"
            CONVERTED_FILES=$((CONVERTED_FILES + 1))
          done < <(find content -type f -name "*.avif")

          # Commit changes if any files were converted
          if [ $CONVERTED_FILES -gt 0 ]; then
            git commit -m "chore: convert ${CONVERTED_FILES} AVIF image(s) to PNG format

            Automatically converted AVIF images to PNG format for better compatibility."
            git push origin HEAD:${{ github.head_ref }}
          fi

      - name: Install Pagefind
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: cloudcannon/pagefind

      - name: Set commit variables
        with:
          env:
            TZ: "UTC"
        run: |
          echo "HUGO_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "HUGO_COMMIT_TITLE=$(git log -1 --pretty=%s)" >> $GITHUB_ENV
          echo "HUGO_COMMIT_DATE=$(git log -1 --date=format-local:'%Y-%m-%d %H:%M:%S' --pretty=%cd)" >> $GITHUB_ENV

      - name: Build with Hugo
        run: hugo --minify

      - name: Build search index
        run: pagefind --site public

      - name: Deploy PR Preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy public --project-name=esphome-devices --branch="pr-${{ github.event.pull_request.number }}"

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Preview deployment

      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸš€ Preview deployment is ready!
            
            You can view the preview at: https://pr-${{ github.event.pull_request.number }}.esphome-devices.pages.dev
            
            This preview will be automatically updated when you push new changes to this PR.
          edit-mode: replace
